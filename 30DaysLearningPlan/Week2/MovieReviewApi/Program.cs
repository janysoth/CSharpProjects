using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using MovieReviewApi.Services; // ‚úÖ Add this using statement

var builder = WebApplication.CreateBuilder(args);

// ----------------------------------------------------------
// üß© 1Ô∏è‚É£ Add services to the container
// ----------------------------------------------------------

// Optional: Swagger/OpenAPI (if you used AddOpenApi earlier)
builder.Services.AddOpenApi();

// ‚úÖ Add Controllers with Newtonsoft.Json for JSON Patch support
builder.Services.AddControllers().AddNewtonsoftJson();

// ‚úÖ Register MovieService for Dependency Injection
builder.Services.AddSingleton<IMovieService, MovieService>();
// üìù Singleton is fine for demo/in-memory data. 
// For real databases, you‚Äôd use AddScoped<>.

// ----------------------------------------------------------
// üß© 2Ô∏è‚É£ Build the app
// ----------------------------------------------------------
var app = builder.Build();

// ----------------------------------------------------------
// üß© 3Ô∏è‚É£ Configure the HTTP request pipeline
// ----------------------------------------------------------
if (app.Environment.IsDevelopment())
{
    app.MapOpenApi(); // Enables Swagger/OpenAPI during development
}

// Optional HTTPS redirection
app.UseHttpsRedirection();

// Map all controllers (like MoviesController)
app.MapControllers();

// ----------------------------------------------------------
// üß© 4Ô∏è‚É£ Run the app
// ----------------------------------------------------------
app.Run();